(function() {
  var $spotForm = $('.js-spot-form').filter('[data-spot-ref="<%= @spot.id %>"]');
  $spotForm.find('.js-design-comment-text').val('');
  var $comments = $spotForm.find('.comments-container');
  <%
    delete_link = ''
    if @comment.can_user_delete?(current_user)
      delete_link = link_to delete_design_comment_path(@comment.id), remote: true, method: :delete, class: 'design-comment-delete', data: {confirm: 'Você tem certeza que deseja apagar esse comentário?'} do raw '<i class="fa fa-trash"></i>' end
    end
  %>

  function color_user(user_id) {
    var unique_ids = []; // name says it all
    var colors = []; // array containing colors, one color - one id
    var user_color = "red";
    user_id = user_id.toString();

    // get all distinct ids
    $('.js-spots-container').find('.js-username-comment').each(function(i, el) {
      if ($.inArray($(el).attr('data-user-ref'), unique_ids) === -1) {
        unique_ids.push($(el).attr('data-user-ref'));
      }
    });

    // check if this user have a comment on page
    if ($.inArray(user_id, unique_ids) === -1) {
      console.log('new user commenting');
      // new user commenting, so create a new color
      user_color = Please.make_color({
        colors_returned: 1,
        saturation: .7,
        value: .7
      });
    } else {
      console.log('existing user commenting');
      // an already existing user, so get his color
      user_color = $('.js-spots-container').find('.js-username-comment[data-user-ref='+ user_id +']').first().css('color');
      console.log('user_color:' + user_color );
    }

    return user_color;
  }

  user_color = color_user(<%= @comment.user.id.to_s %>);

  $("<p class=\"design-comment\" data-comment-id=\"<%= @comment.id =%>\"><%= @comment.comment %><span data-user-ref=\"<%= @comment.user.id %>\" class=\"js-username-comment\"  style=\"color: "+ user_color +";\">- <%= @comment.user.name %></span><%= j(delete_link) %></p>").appendTo($comments);
}());
